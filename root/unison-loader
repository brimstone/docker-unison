#!/bin/bash

set -ueo pipefail

check_connection() {
	local peer=$(awk "\$2~/:$(printf "%04x" "$1")/&&\$4==\"01\" {print \$2}" /proc/net/tcp)
	if [ -n "$peer" ]; then
		echo "$peer"
	else
		return 1
	fi
}

NAME=""
DIR=""
GWDEV=$(ip -oneline route list 0/0 | awk '{print $NF}')
MYIP=$(ip -family inet -oneline addr show $GWDEV | awk '{gsub("/.*", "", $4); print $4}')
ETCDHOST=$(ip -oneline route list 0/0 | awk '{print $3}')
PORT=1024

while [ $# -gt 0 ]; do
	case "$1" in
		--name)
			shift
			NAME="$1"
		;;
		--dir)
			shift
			DIR="$1"
		;;
		--etcdhost)
			shift
			ETCDHOST="$1"
		;;
		--port)
			shift
			PORT="$1"
		;;
		--debug)
			set -x
		;;
		*)
			echo "Unknown option $1"
		;;
	esac
	shift
done

if [ -z "$NAME" ]; then
	echo "--name is required"
	exit 1
fi

if [ -z "$DIR" ]; then
	echo "--dir is required"
	exit 1
fi

# Start unison
unison -socket $PORT &

mkdir -p "$DIR"

while true; do
	# Get our peers
	/etcdctl -C http://$ETCDHOST:4001 ls /unison/$NAME | while read peer; do
		# exit if there's a space in our peer name.
		# this is indicative of an error. There's probably a better way to do this
		if echo "$peer" | grep -q " "; then
			echo "$(date) Error getting peer name: $peer"
			continue
		fi
		# Check to see if our peer is empty
		if [ -z "$peer" ]; then
			echo "$(date) Error peer name is empty"
			continue
		fi
		# Bail if something is syncronising with us
		if check_connection $PORT; then
			echo "$(date) Error: Something is connected to us"
			continue
		fi
		# get the ip of our peer from etcd
		ip="$(/etcdctl -C http://$ETCDHOST:4001 get $peer)"
		if echo "$ip" | grep -q " "; then
			echo "$(date) Error getting peer ip from $peer: $ip"
			continue
		fi
		# Ignore ourselves
		[ "$ip" = "$MYIP" ] && continue
		# synchronize with our peer
		unison -silent -batch -numericids -owner -group -times -prefer newer $DIR socket://$ip:$PORT/$DIR || \
			echo "Failed: unison -silent -batch -numericids -owner -group -times -prefer newer $DIR socket://$ip:$PORT/$DIR"
	done || true
	# update etcd with where we're located
	/etcdctl -C http://$ETCDHOST:4001 set --ttl 30 "/unison/$NAME/$HOSTNAME" "$MYIP" >dev/null || echo "Can't set $ETCDHOST:/unison/$NAME/$HOSTNAME to $MYIP"
	# pause for dramatic effect
	sleep 2
done
